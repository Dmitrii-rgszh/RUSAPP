'use client';

import React from 'react';

export default function DashboardPage() {
  const stats = [
    { 
      id: 1, 
      icon: 'ü§ñ', 
      value: '3', 
      label: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤', 
      change: '+2', 
      changeType: 'positive' 
    },
    { 
      id: 2, 
      icon: 'üí¨', 
      value: '1,234', 
      label: '–°–æ–æ–±—â–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è', 
      change: '+12%', 
      changeType: 'positive' 
    },
    { 
      id: 3, 
      icon: 'üë•', 
      value: '342', 
      label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 
      change: '+8%', 
      changeType: 'positive' 
    },
    { 
      id: 4, 
      icon: 'üìà', 
      value: '89%', 
      label: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è', 
      change: '-3%', 
      changeType: 'negative' 
    }
  ];

  const recentActivity = [
    { id: 1, user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', action: '–ù–∞—á–∞–ª –¥–∏–∞–ª–æ–≥', bot: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', time: '5 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { id: 2, user: '–ú–∞—Ä–∏—è –°–º–∏—Ä–Ω–æ–≤–∞', action: '–ó–∞–≤–µ—Ä—à–∏–ª–∞ –ø–æ–∫—É–ø–∫—É', bot: '–ü—Ä–æ–¥–∞–∂–∏ Bot', time: '12 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { id: 3, user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', action: '–û—Å—Ç–∞–≤–∏–ª –æ—Ç–∑—ã–≤', bot: '–û—Ç–∑—ã–≤—ã Bot', time: '1 —á–∞—Å –Ω–∞–∑–∞–¥' },
  ];

  const botPerformance = [
    { id: 1, name: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7', messages: 523, conversion: 92 },
    { id: 2, name: '–ü—Ä–æ–¥–∞–∂–∏ Bot', messages: 341, conversion: 78 },
    { id: 3, name: 'HR Assistant', messages: 156, conversion: 85 },
  ];

  return (
    <div className="p-6 space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-white mb-2">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BotCraft
          </h1>
          <p className="text-gray-400">
            –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –±–æ—Ç–∞–º–∏ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </p>
        </div>
        <button className="btn-gradient flex items-center gap-2">
          <span>üöÄ</span>
          –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞
        </button>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {stats.map((stat) => (
          <div key={stat.id} className="card-glass group hover:scale-105 transition-transform duration-200">
            <div className="flex justify-between items-center mb-4">
              <div className="w-12 h-12 bg-blue-500/20 rounded-lg flex items-center justify-center text-2xl group-hover:scale-110 transition-transform">
                {stat.icon}
              </div>
              <span className={`text-sm font-medium ${
                stat.changeType === 'positive' ? 'text-green-400' : 'text-red-400'
              }`}>
                {stat.change}
              </span>
            </div>
            <div className="text-2xl font-bold text-white mb-1">
              {stat.value}
            </div>
            <div className="text-sm text-gray-400">
              {stat.label}
            </div>
          </div>
        ))}
      </div>

      {/* Content Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Recent Activity */}
        <div className="lg:col-span-2 card-glass">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-xl font-semibold text-white">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
            <button className="text-sm text-blue-400 hover:text-blue-300 transition-colors">
              –í—Å–µ —Å–æ–±—ã—Ç–∏—è ‚Üí
            </button>
          </div>
          
          <div className="space-y-4">
            {recentActivity.map((activity) => (
              <div key={activity.id} className="flex items-center justify-between p-4 bg-gray-800/50 rounded-lg hover:bg-gray-800/70 transition-colors">
                <div className="flex items-center gap-4">
                  <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-medium">
                    {activity.user.split(' ').map(n => n[0]).join('')}
                  </div>
                  <div>
                    <p className="text-white font-medium">{activity.user}</p>
                    <p className="text-sm text-gray-400">{activity.action} ‚Ä¢ {activity.bot}</p>
                  </div>
                </div>
                <span className="text-xs text-gray-500">{activity.time}</span>
              </div>
            ))}
          </div>
        </div>

        {/* Bot Performance */}
        <div className="card-glass">
          <h2 className="text-xl font-semibold text-white mb-6">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–æ–≤</h2>
          
          <div className="space-y-4">
            {botPerformance.map((bot) => (
              <div key={bot.id} className="space-y-2">
                <div className="flex justify-between items-center">
                  <span className="text-sm font-medium text-gray-300">{bot.name}</span>
                  <span className="text-xs text-gray-500">{bot.messages} —Å–æ–æ–±—â–µ–Ω–∏–π</span>
                </div>
                <div className="w-full bg-gray-700 rounded-full h-2">
                  <div 
                    className="bg-gradient-to-r from-blue-500 to-purple-600 h-2 rounded-full transition-all duration-300"
                    style={{ width: `${bot.conversion}%` }}
                  />
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-xs text-gray-500">–ö–æ–Ω–≤–µ—Ä—Å–∏—è</span>
                  <span className="text-xs font-medium text-green-400">{bot.conversion}%</span>
                </div>
              </div>
            ))}
          </div>
          
          <button className="w-full mt-6 px-4 py-2 text-sm font-medium text-blue-400 border border-blue-500/30 rounded-lg hover:bg-blue-500/10 transition-colors">
            –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
          </button>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="card-gradient-border">
        <h2 className="text-lg font-semibold text-white mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <button className="p-4 bg-gray-800/50 rounded-lg hover:bg-gray-800/70 transition-colors group">
            <span className="text-2xl mb-2 block group-hover:scale-110 transition-transform">üìù</span>
            <span className="text-sm text-gray-300">–°–æ–∑–¥–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π</span>
          </button>
          <button className="p-4 bg-gray-800/50 rounded-lg hover:bg-gray-800/70 transition-colors group">
            <span className="text-2xl mb-2 block group-hover:scale-110 transition-transform">üìä</span>
            <span className="text-sm text-gray-300">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</span>
          </button>
          <button className="p-4 bg-gray-800/50 rounded-lg hover:bg-gray-800/70 transition-colors group">
            <span className="text-2xl mb-2 block group-hover:scale-110 transition-transform">üîî</span>
            <span className="text-sm text-gray-300">–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–ª–µ—Ä—Ç—ã</span>
          </button>
          <button className="p-4 bg-gray-800/50 rounded-lg hover:bg-gray-800/70 transition-colors group">
            <span className="text-2xl mb-2 block group-hover:scale-110 transition-transform">üéØ</span>
            <span className="text-sm text-gray-300">A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
          </button>
        </div>
      </div>
    </div>
  );
}
